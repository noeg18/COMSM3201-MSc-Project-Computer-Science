response_num,response,cluster
1,"

def solve(nums):
    dp = [0] * (len(nums) + 3)
    for i in reversed(range(len(nums))):
        dp[i] = nums[i] + max(dp[i+2], dp[i+3])
    return max(dp[0], dp[1])",1
2,"

def solve(arr):
    n = len(arr)
    dp = [0] * n
    
    if n == 1:
        return arr[0]
    elif n == 2:
        return max(arr[0], arr[1])
    
    dp[0] = arr[0]
    dp[1] = max(arr[0], arr[1])
    dp[2] = max(arr[0] + arr[2], arr[1])
    
    for i in range(3, n):
        dp[i] = max(dp[i-2] + arr[i], dp[i-3] + arr[i])
    
    return max(dp[-1], dp[-2])",2
3,"

def solve(arr):
    n = len(arr)
    if n == 0:
        return 0
    if n == 1:
        return arr[0]
    if n == 2:
        return max(arr[0], arr[1])
    dp = [0] * n
    dp[0] = arr[0]
    dp[1] = arr[0] + arr[1]
    dp[2] = max(dp[1], arr[0] + arr[2], arr[1] + arr[2])
    for i in range(3, n):
        dp[i] = max(dp[i-1], dp[i-2] + arr[i], dp[i-3] + arr[i] + arr[i-1])
    return dp[n-1]",3
4,"

def solve(arr):
    n = len(arr)
    dp = [0] * n
    dp[0] = arr[0]
    dp[1] = arr[0] + arr[1]
    dp[2] = max(dp[1], arr[0] + arr[2], arr[1] + arr[2])
    
    for i in range(3, n):
        dp[i] = max(dp[i-1], arr[i] + dp[i-2], arr[i] + arr[i-1] + dp[i-3])
    
    return dp[n-1]",4
5,"

def solve(arr):
    if len(arr) <= 3:
        return sum(arr)
    
    dp = [0] * len(arr)
    
    dp[0] = arr[0]
    dp[1] = arr[0] + arr[1]
    dp[2] = max(dp[1], arr[0] + arr[2], arr[1] + arr[2])
    
    for i in range(3, len(arr)):
        dp[i] = max(dp[i-3] + arr[i] + arr[i-1], dp[i-2] + arr[i], dp[i-1])
    
    return dp[-1]",5
