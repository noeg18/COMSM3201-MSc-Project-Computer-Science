response_num,response,cluster
1,"

def solve(arr):
    longest = 0
    for i in range(len(arr)):
        current = 1
        j = i+1
        while j < len(arr):
            if abs(arr[j] - arr[j-1]) <= 1:
                current += 1
                j += 1
            else:
                break
        longest = max(longest, current)
    return longest",1
2,"

def solve(arr):
    dp = [1] * len(arr)
    for i in range(1, len(arr)):
        for j in range(i):
            if abs(arr[i] - arr[j]) == 1:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)",2
3,"

def solve(arr):
    max_length = 0
    for i in range(len(arr)):
        curr_length = 1
        curr_element = arr[i]
        for j in range(i+1, len(arr)):
            if abs(arr[j] - curr_element) == 1:
                curr_length += 1
                curr_element = arr[j]
        max_length = max(max_length, curr_length)
    return max_length",3
4,"

def solve(arr):
    max_len = 1
    curr_len = 1
    
    for i in range(1, len(arr)):
        if abs(arr[i] - arr[i-1]) <= 1:
            curr_len += 1
        else:
            curr_len = 1
        
        if curr_len > max_len:
            max_len = curr_len
    
    return max_len",4
5,"

def solve(arr):
    if len(arr) == 0:
        return 0
    
    max_length = 1
    curr_length = 1
    
    for i in range(1, len(arr)):
        if abs(arr[i] - arr[i-1]) <= 1:
            curr_length += 1
        else:
            curr_length = 1
        max_length = max(max_length, curr_length)
    
    return max_length",5
