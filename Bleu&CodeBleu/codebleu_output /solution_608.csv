response_num,response,cluster
1,"

def solve(n):
    bell = [1, 1]
    for i in range(2, n+1):
        bell.append(0)
        for j in range(i):
            bell[i] += bell[j] * bell[i-j-1]
    return bell[n]",1
2,"

def solve(n):
    bell = [[0 for i in range(n+1)] for j in range(n+1)]
    bell[0][0] = 1
    for i in range(1, n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1, i+1):
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]
    return bell[n][0]",2
3,"

def solve(n):
    bell = [[0 for i in range(n+1)] for j in range(n+1)]
    bell[0][0] = 1
    for i in range(1, n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1, i+1):
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]
    return bell[n][0]",2
4,"

def solve(n):
    bell_num = [[1]]
    for i in range(1,n):
        row = [bell_num[i-1][-1]]
        for j in range(i):
            row.append(row[-1] + bell_num[i-1][j])
        bell_num.append(row)
    return bell_num[n-1][-1]",3
5,"

def solve(n):
    bell = [[0 for i in range(n+1)] for j in range(n+1)]
    bell[0][0] = 1
    for i in range(1,n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1,i+1):
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]
    return bell[n][0]",4
