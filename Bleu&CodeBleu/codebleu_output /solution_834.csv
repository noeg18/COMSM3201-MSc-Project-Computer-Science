response_num,response,cluster
1,"

def solve(n):
    matrix = [[0 for i in range(n)] for j in range(n)]
    left = 0
    right = n-1
    top = 0
    bottom = n-1
    num = 1

    while left <= right and top <= bottom:
        for i in range(left, right+1):
            matrix[top][i] = num**2
            num += 1
        top += 1

        for i in range(top, bottom+1):
            matrix[i][right] = num**2
            num += 1
        right -= 1

        for i in range(right, left-1, -1):
            matrix[bottom][i] = num**2
            num += 1
        bottom -= 1

        for i in range(bottom, top-1, -1):
            matrix[i][left] = num**2
            num += 1
        left += 1

    return matrix",1
2,"

def solve(n):
    matrix = [[0 for i in range(n)] for j in range(n)]
    num = 1
    top = 0
    bottom = n - 1
    left = 0
    right = n - 1

    while top <= bottom and left <= right:
        for i in range(left, right + 1):
            matrix[top][i] = num ** 2
            num += 1
        top += 1

        for i in range(top, bottom + 1):
            matrix[i][right] = num ** 2
            num += 1
        right -= 1

        for i in range(right, left - 1, -1):
            matrix[bottom][i] = num ** 2
            num += 1
        bottom -= 1

        for i in range(bottom, top - 1, -1):
            matrix[i][left] = num ** 2
            num += 1
        left += 1

    return matrix",2
3,"

def solve(n):
    matrix = [[0 for i in range(n)] for j in range(n)]
    row_start = 0
    row_end = n - 1
    col_start = 0
    col_end = n - 1
    num = 1

    while row_start <= row_end and col_start <= col_end:
        for i in range(col_start, col_end + 1):
            matrix[row_start][i] = num * num
            num += 1
        row_start += 1

        for i in range(row_start, row_end + 1):
            matrix[i][col_end] = num * num
            num += 1
        col_end -= 1

        if row_start <= row_end:
            for i in range(col_end, col_start - 1, -1):
                matrix[row_end][i] = num * num
                num += 1
            row_end -= 1

        if col_start <= col_end:
            for i in range(row_end, row_start - 1, -1):
                matrix[i][col_start] = num * num
                num += 1
            col_start += 1

    return matrix",3
4,"

def solve(n):
    matrix = [[0 for i in range(n)] for j in range(n)]
    top = 0
    bottom = n - 1
    left = 0
    right = n - 1
    num = 1

    while num <= n*n:
        for i in range(left, right+1):
            matrix[top][i] = num
            num += 1
        top += 1

        for i in range(top, bottom+1):
            matrix[i][right] = num
            num += 1
        right -= 1

        for i in range(right, left-1, -1):
            matrix[bottom][i] = num
            num += 1
        bottom -= 1

        for i in range(bottom, top-1, -1):
            matrix[i][left] = num
            num += 1
        left += 1

    return matrix",4
5,"

def solve(n):
    matrix = [[0 for i in range(n)] for j in range(n)]
    start_row = 0
    end_row = n-1
    start_col = 0
    end_col = n-1
    num = 1

    while start_row <= end_row and start_col <= end_col:
        for i in range(start_col, end_col+1):
            matrix[start_row][i] = num
            num += 1
        start_row += 1

        for i in range(start_row, end_row+1):
            matrix[i][end_col] = num
            num += 1
        end_col -= 1

        for i in range(end_col, start_col-1, -1):
            matrix[end_row][i] = num
            num += 1
        end_row -= 1

        for i in range(end_row, start_row-1, -1):
            matrix[i][start_col] = num
            num += 1
        start_col += 1

    return matrix",5
