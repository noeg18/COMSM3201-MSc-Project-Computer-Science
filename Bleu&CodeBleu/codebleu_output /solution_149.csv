response_num,response,cluster
1,"

def solve(arr):
    longest = []
    for i in range(len(arr)):
        subseq = [arr[i]]
        for j in range(i+1, len(arr)):
            if abs(arr[j]-subseq[-1]) == 1:
                subseq.append(arr[j])
            else:
                break
        if len(subseq) > len(longest):
            longest = subseq
    return longest",1
2,"

def solve(arr):
    max_len = 0
    curr_len = 1

    for i in range(1, len(arr)):
        if abs(arr[i] - arr[i-1]) == 1:
            curr_len += 1
        else:
            max_len = max(max_len, curr_len)
            curr_len = 1

    max_len = max(max_len, curr_len)

    return max_len",2
3,"

def solve(arr):
    longest = []
    current = []
    prev = None
    
    for num in arr:
        if prev is None or abs(num - prev) == 1:
            current.append(num)
        else:
            if len(current) > len(longest):
                longest = current
            current = [num]
        prev = num
    
    if len(current) > len(longest):
        longest = current
    
    return longest",3
4,"

def solve(nums):
    l = len(nums)
    if l == 0:
        return 0
    dp = [1] * l
    for i in range(1, l):
        for j in range(i):
            if nums[i] == nums[j] + 1 or nums[i] == nums[j] - 1:
                dp[i] = max(dp[i], dp[j] + 1)

    return max(dp)",4
5,"

def solve(arr):
    dp = [1] * len(arr)
    for i in range(len(arr)):
        for j in range(i):
            if abs(arr[i] - arr[j]) == 1:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)",5
