response_num,response,cluster
1,"

def solve(a, b, c):
    d = b**2 - 4*a*c
    if d < 0:
        return False
    else:
        root1 = (-b + (d ** 0.5)) / (2*a)
        root2 = (-b - (d ** 0.5)) / (2*a)
        if root1 == 2*root2 or root2 == 2*root1:
            return True
        else:
            return False",1
2,"

def solve(a, b, c):
    discriminant = (b**2) - (4*a*c)
    if discriminant < 0:
        return False
    else:
        x1 = (-b + (discriminant ** 0.5)) / (2 * a)
        x2 = (-b - (discriminant ** 0.5)) / (2 * a)
        if x1 == 2*x2 or x2 == 2*x1:
            return True
        else:
            return False",2
3,"

def solve(a, b, c):
    discriminant = b**2 - 4*a*c
    if discriminant < 0:
        return False
    else:
        root1 = (-b + discriminant**(1/2)) / (2*a)
        root2 = (-b - discriminant**(1/2)) / (2*a)
        if root1 == 2*root2 or root2 == 2*root1:
            return True
        else:
            return False",3
4,"

def solve(a, b, c):
    discriminant = b**2 - 4*a*c
    if discriminant >= 0:
        root1 = (-b + (discriminant)**0.5) / (2*a)
        root2 = (-b - (discriminant)**0.5) / (2*a)
        if root1 == 2*root2 or root2 == 2*root1:
            return True
        else:
            return False
    else:
        return ""No real roots exist.""",4
5,"

def solve(a, b, c):
    discriminant = b**2 - 4*a*c
    if discriminant >= 0:
        root1 = (-b + (discriminant)**0.5) / (2*a)
        root2 = (-b - (discriminant)**0.5) / (2*a)
        if root1 == 2*root2 or root2 == 2*root1:
            return True
        else:
            return False
    else:
        return False",4
