response_num,response,cluster
1,"

def solve(arr, target):
    left = 0
    right = len(arr) - 1
    
    while left <= right:
        mid = (left + right) // 2
        
        if arr[mid] == target:
            if mid == 0 or arr[mid-1] < target:
                return mid
            else:
                right = mid - 1
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
                
    return -1",1
2,"

def solve(arr, target):
    low = 0
    high = len(arr) - 1
    
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1",2
3,"

def solve(arr, target):
    low = 0
    high = len(arr) - 1 
    
    while low <= high:
        mid = (low + high) // 2 
        if arr[mid] < target:
            low = mid + 1 
        elif arr[mid] > target:
            high = mid - 1
        else:
            if mid == 0 or arr[mid-1] != target:
                return mid
            else:
                high = mid - 1 
    return -1",3
4,"

def solve(arr, target):
    left = 0
    right = len(arr) - 1

    while left <= right:
        mid = (left + right) // 2
        if arr[mid] < target:
            left = mid + 1
        elif arr[mid] > target:
            right = mid - 1
        else:
            while arr[mid] == target:
                mid -= 1
            return mid + 1
    return -1",4
5,"

def solve(arr, target):
    start = 0
    end = len(arr) - 1
    while start <= end:
        mid = (start + end) // 2
        if arr[mid] < target:
            start = mid + 1
        elif arr[mid] > target:
            end = mid - 1
        else:
            while mid > 0 and arr[mid - 1] == target:
                mid -= 1
            return mid
    return -1",5
