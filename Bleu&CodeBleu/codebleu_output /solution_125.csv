response_num,response,cluster
1,"

def solve(binary_string):
    max_diff = 0
    for i in range(len(binary_string)):
        count_zero = 0
        count_one = 0
        for j in range(i, len(binary_string)):
            if binary_string[j] == '0':
                count_zero += 1
            else:
                count_one += 1
            max_diff = max(max_diff, abs(count_zero - count_one))
    return max_diff",1
2,"

def solve(s):
    max_diff = 0
    curr_diff = 0
    count_0 = 0
    count_1 = 0
    for i in range(len(s)):
        if s[i] == '0':
            count_0 += 1
        else:
            count_1 += 1
        curr_diff = count_0 - count_1
        if curr_diff > max_diff:
            max_diff = curr_diff
        if curr_diff < 0:
            count_0 = 0
            count_1 = 0
            curr_diff = 0
    return max_diff",2
3,"

def solve(string):
    max_diff = 0
    count_zero = 0
    count_one = 0
    for i in range(len(string)):
        if string[i] == '0':
            count_zero += 1
        else:
            count_one += 1
        diff = count_one - count_zero
        if diff > max_diff:
            max_diff = diff
        if diff < 0:
            count_zero = 0
            count_one = 0
    return max_diff",3
4,"

def solve(s):
    max_diff = 0
    for i in range(len(s)):
        count_0 = 0
        count_1 = 0
        for j in range(i, len(s)):
            if s[j] == '0':
                count_0 += 1
            else:
                count_1 += 1
            diff = count_0 - count_1
            if diff > max_diff:
                max_diff = diff
    return max_diff",4
5,"

def solve(binary_string):
    max_diff = 0
    for i in range(len(binary_string)):
        count_0 = 0
        count_1 = 0
        for j in range(i, len(binary_string)):
            if binary_string[j] == '0':
                count_0 += 1
            else:
                count_1 += 1
            if count_1 - count_0 > max_diff:
                max_diff = count_1 - count_0
    return max_diff",5
