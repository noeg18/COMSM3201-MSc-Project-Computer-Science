response_num,response,cluster
1,"

def solve(start, end):
    divisors = {}
    for i in range(start, end+1):
        for j in range(1, i+1):
            if i % j == 0:
                if j in divisors:
                    divisors[j] += 1
                else:
                    divisors[j] = 1
    max_divisor = max(divisors, key=divisors.get)
    return max_divisor",1
2,"

def solve(start, end):
    max_divisor = 0
    for num in range(start, end+1):
        count = 0
        for i in range(1, num+1):
            if num % i == 0:
                count += 1
        if count > max_divisor:
            max_divisor = count
    return max_divisor",2
3,"

def solve(start, end):
    max_divisor = 0
    for num in range(start, end+1):
        divisors = []
        for i in range(1, num+1):
            if num % i == 0:
                divisors.append(i)
        if len(divisors) > len(max_divisor):
            max_divisor = divisors
    return max_divisor[-1]",3
4,"

def solve(start,end):
    divisors = {}
    for num in range(start, end+1):
        for i in range(1, num+1):
            if num % i == 0:
                if i in divisors:
                    divisors[i] += 1
                else:
                    divisors[i] = 1
    max_div = max(divisors.values())
    for key, value in divisors.items():
        if value == max_div:
            return key",4
5,"

def solve(start, end):
    divisors = []
    for num in range(start, end+1):
        for i in range(1, num+1):
            if num%i == 0:
                divisors.append(i)
    max_occur = max(set(divisors), key=divisors.count)
    return max_occur",5
