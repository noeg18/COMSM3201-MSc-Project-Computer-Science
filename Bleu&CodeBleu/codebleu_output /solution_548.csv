response_num,response,cluster
1,"

def solve(sequence):
    if not sequence:
        return 0
    dp = [1] * len(sequence)
    for i in range(1, len(sequence)):
        for j in range(i):
            if sequence[i] > sequence[j]:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)",1
2,"

def solve(seq):
    if not seq:
        return 0
    
    n = len(seq)
    dp = [1] * n
    
    for i in range(1, n):
        for j in range(i):
            if seq[j] < seq[i]:
                dp[i] = max(dp[i], dp[j] + 1)
                
    return max(dp)",2
3,"

def solve(sequence):
    n = len(sequence)
    dp = [1] * n
    for i in range(1, n):
        for j in range(i):
            if sequence[i] > sequence[j] and dp[i] < dp[j] + 1:
                dp[i] = dp[j] + 1
    return max(dp) if n else 0",3
4,"

def solve(sequence):
    dp = [1] * len(sequence)
    for i in range(1, len(sequence)):
        for j in range(i):
            if sequence[j] < sequence[i]:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)",4
5,"

def solve(sequence):
    length = len(sequence)
    dp = [1] * length
    for i in range(1, length):
        for j in range(i):
            if sequence[i] > sequence[j]:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)",5
