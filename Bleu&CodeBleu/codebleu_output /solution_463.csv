response_num,response,cluster
1,"
def solve(nums):
    max_product = nums[0]
    max_so_far = nums[0]
    min_so_far = nums[0]
    
    for i in range(1, len(nums)):
        temp_max = max(max_so_far*nums[i], min_so_far*nums[i], nums[i])
        temp_min = min(max_so_far*nums[i], min_so_far*nums[i], nums[i])
        
        max_so_far = temp_max
        min_so_far = temp_min
        
        max_product = max(max_product, max_so_far)
        
    return max_product",1
2,"

def solve(nums):
    if not nums:
        return 0
    max_so_far = nums[0]
    max_ending_here = nums[0]
    min_ending_here = nums[0]
    for i in range(1, len(nums)):
        max_so_far = max(max_so_far*nums[i], min_ending_here*nums[i], nums[i])
        min_ending_here = min(max_ending_here*nums[i], min_ending_here*nums[i], nums[i])
        max_ending_here = max_so_far
    return max_so_far",2
3,"

def solve(nums):
    max_prod = nums[0]
    curr_prod = nums[0]
    for i in range(1, len(nums)):
        curr_prod = max(nums[i], curr_prod * nums[i])
        max_prod = max(max_prod, curr_prod)
    return max_prod",3
4,"

def solve(nums):
    max_prod = nums[0]
    min_prod = nums[0]
    result = nums[0]
    for i in range(1, len(nums)):
        temp_max = max(nums[i], max_prod * nums[i], min_prod * nums[i])
        temp_min = min(nums[i], max_prod * nums[i], min_prod * nums[i])
        max_prod = temp_max
        min_prod = temp_min
        result = max(result, max_prod)
    return result",4
5,"

def solve(nums):
    max_so_far = nums[0]
    max_ending_here = nums[0]
    min_ending_here = nums[0]

    for i in range(1, len(nums)):
        curr_num = nums[i]
        temp_max = max(curr_num, max_ending_here * curr_num, min_ending_here * curr_num)
        min_ending_here = min(curr_num, max_ending_here * curr_num, min_ending_here * curr_num)
        max_ending_here = temp_max
        max_so_far = max(max_so_far, max_ending_here)

    return max_so_far",5
