response_num,response,cluster
1,"

def solve(arr):
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    left = arr[:mid]
    right = arr[mid:]
    
    left = solve(left)
    right = solve(right)
    
    return merge(left, right)
    
def merge(left, right):
    result = []
    i = 0
    j = 0
    
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    
    while i < len(left):
        result.append(left[i])
        i += 1
        
    while j < len(right):
        result.append(right[j])
        j += 1
        
    return result",1
2,"

def solve(arr):
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    left = arr[:mid]
    right = arr[mid:]
    
    left = solve(left)
    right = solve(right)
    
    return merge(left, right)

def merge(left, right):
    result = []
    i = j = 0
    
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
            
    result.extend(left[i:])
    result.extend(right[j:])
    
    return result",2
3,"

def merge_sort(array):
    if len(array) > 1:
        mid = len(array) // 2
        left = array[:mid]
        right = array[mid:]

        merge_sort(left)
        merge_sort(right)

        i = j = k = 0

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                array[k] = left[i]
                i += 1
            else:
                array[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            array[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            array[k] = right[j]
            j += 1
            k += 1

    return array

def solve(array):
    return merge_sort(array)",3
4,"

def solve(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        left = arr[:mid]
        right = arr[mid:]

        solve(left)
        solve(right)

        i = j = k = 0

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                arr[k] = left[i]
                i += 1
            else:
                arr[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            arr[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            arr[k] = right[j]
            j += 1
            k += 1

    return arr ",4
5,"

def solve(arr):
    
    if len(arr) > 1:
        
        mid = len(arr) // 2
        
        left = arr[:mid]
        right = arr[mid:]
        
        solve(left)
        solve(right)
        
        i = j = k = 0
        
        while i < len(left) and j < len(right):
            
            if left[i] < right[j]:
                
                arr[k] = left[i]
                i += 1
                
            else:
                
                arr[k] = right[j]
                j += 1
                
            k += 1
            
        while i < len(left):
            
            arr[k] = left[i]
            i += 1
            k += 1
            
        while j < len(right):
            
            arr[k] = right[j]
            j += 1
            k += 1
            
    return arr",4
