response_num,response,cluster
1,"

import heapq

def solve(nums):
    heapq.heapify(nums)
    max1 = heapq.heappop(nums)
    max2 = heapq.heappop(nums)
    max3 = heapq.heappop(nums)
    max_prod = max1 * max2 * max3
    heapq.heappush(nums, max1)
    heapq.heappush(nums, max2)
    heapq.heappush(nums, max3)
    min1 = heapq.heappop(nums)
    min2 = heapq.heappop(nums)
    max_prod = max(max_prod, min1 * min2 * max3)
    return max_prod",1
2,"

import heapq

def solve(nums):
    heap = heapq.heapify(nums)
    max1 = heapq.heappop(nums)
    max2 = heapq.heappop(nums)
    max3 = heapq.heappop(nums)
    return max1 * max2 * max3",2
3,"

def solve(nums):
    import heapq
    heapq.heapify(nums)
    max1 = heapq.nlargest(3, nums)
    max2 = heapq.nsmallest(2, nums)
    return max(max1[0] * max1[1] * max1[2], max1[0] * max2[0] * max2[1])",3
4,"

import heapq

def solve(nums):
    heap = heapq.nlargest(3, nums)
    return heap[0] * heap[1] * heap[2]",4
5,"

def solve(nums):
    import heapq
    heapq.heapify(nums)
    max1 = heapq.heappop(nums)
    max2 = heapq.heappop(nums)
    max3 = heapq.heappop(nums)
    min1 = heapq.heappop(nums)
    min2 = heapq.heappop(nums)
    
    return max(max1*max2*max3, max1*min1*min2)",5
